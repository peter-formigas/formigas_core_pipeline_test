name: Continuous Integration

on:
  push:
    branches: [develop, staging, master, main]
  pull_request:

env:
  FLUTTER_VERSION: "3.13.9"

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      - name: Format
        run: dart format -o none --set-exit-if-changed lib/ test/
      - name: Build runner
        run: dart run build_runner build --delete-conflicting-outputs
      - name: Analyze
        run: flutter analyze --fatal-infos --fatal-warnings

  determine-flavor:
    runs-on: ubuntu-latest
    outputs:
      flavor: ${{ steps.set-flavor.outputs.flavor }}
    steps:
      - name: Determine Flavor
        id: set-flavor
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/master" || "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "flavor=production" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "flavor=staging" >> $GITHUB_OUTPUT
          else
            echo "flavor=development" >> $GITHUB_OUTPUT
          fi

  build:
    name: Build ${{ matrix.platform }} ${{ needs.determine-flavor.outputs.flavor }}
    needs: determine-flavor
    strategy:
      matrix:
        platform: [android, ios]
        include:
          - runs-on: ubuntu-latest
            platform: android
          - runs-on: macos-latest
            platform: ios
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v3
      - name: Build ${{ matrix.platform }} ${{ needs.determine-flavor.outputs.flavor }}
        uses: ./.github/actions/build_app
        with:
          platform: ${{ matrix.platform }}
          flavor: ${{ needs.determine-flavor.outputs.flavor }}

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      - name: Install lcov
        run: |
          sudo apt-get update
          sudo apt-get -y install lcov
      - name: Clean
        run: flutter clean
      - name: Build runner
        run: dart run build_runner build --delete-conflicting-outputs
      - name: Run tests
        run: flutter test --coverage --file-reporter json:test_reports/test_report.json
      - name: Publish test results
        uses: dorny/test-reporter@v1.6.0
        with:
          name: "Unit tests report"
          path: test_reports/test_report.json
          reporter: "flutter-json"
          max-annotations: "50"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish coverage report
        if: github.event_name == 'pull_request'
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          lcov-file: coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          title: "Coverage Report"
