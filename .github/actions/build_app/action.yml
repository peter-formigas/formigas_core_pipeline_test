name: Build App
description: Builds the app for the specified platform and flavor

inputs:
  platform:
    required: true
    description: "Platform to build (android or ios)"
  flavor:
    required: true
    description: "Build flavor"
  flutter_version:
    required: true
    description: "Flutter version"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ inputs.flutter_version }}
        cache: true
    - name: Setup android
      shell: bash
      if: ${{ inputs.platform }} == 'android'
      run: |
        export KEYSTORE_FILENAME=upload-keystore.jks
        export ANDROID_KEYSTORE_PATH=$KEYSTORE_FILENAME
        export ANDROID_KEYSTORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        export ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD }}
        export ANDROID_KEY_ALIAS=${{ vars.ANDROID_KEY_ALIAS }}
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > ./android/app/$KEYSTORE_FILENAME
    - name: Clean
      shell: bash
      run: flutter clean
    - name: Build runner
      shell: bash
      run: dart run build_runner build --delete-conflicting-outputs
    - name: Build
      shell: bash
      run: |
        build_command=""
        if [ "${{ inputs.platform }}" = "android" ]; then
          build_command="appbundle"
        elif [ "${{ inputs.platform }}" = "ios" ]; then
          build_command="ios --no-codesign"
        fi
        flutter build $build_command --release --flavor ${{ inputs.flavor }} -t lib/main_${{ inputs.flavor }}.dart
